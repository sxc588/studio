<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd  
                    http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">


<bean id="helloWordImpl" class="com.github.support.demo.HelloWordImpl"></bean>

	<bean id="inMessageInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" />
	<bean id="outMessageInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor" />

	<!--id:名称(随意配)，implementor:指定接口具体实现类，address:随意配 -->
	<jaxws:endpoint id="helloWorld" implementor="#helloWordImpl" address="/HelloWorld">
		<!-- 输入日志拦截器 -->
		<jaxws:inInterceptors>
			<ref bean="inMessageInterceptor" />
		</jaxws:inInterceptors>
		<!-- 输出日志拦截器 -->
		<jaxws:outInterceptors>
			<ref bean="outMessageInterceptor" />
		</jaxws:outInterceptors>
		<jaxws:properties>
			<entry key="mtom_enabled" value="true"></entry>
		</jaxws:properties>
	</jaxws:endpoint>

	<jaxrs:server id="restHelloWorld" address="/">
		<jaxrs:inInterceptors>
			<ref bean="inMessageInterceptor" />
		</jaxrs:inInterceptors>
		<jaxrs:outInterceptors>
			<ref bean="outMessageInterceptor" />
		</jaxrs:outInterceptors>
		<jaxrs:serviceBeans>
			<bean class="com.github.support.demo.RestHelloWordImpl"></bean>
		</jaxrs:serviceBeans>
		<jaxrs:extensionMappings>
			<entry key="json" value="application/json" />
			<entry key="xml" value="application/xml" />
		</jaxrs:extensionMappings>
		<jaxrs:languageMappings>
			<entry key="en" value="en-gb" />
		</jaxrs:languageMappings>
	</jaxrs:server>

	<!-- WebService 客户端 spring 配置文件cxf与Spring集成，cxf里提供了一个工厂类org.apache.cxf.jaxws.JaxWsProxyFactoryBean，
		可以方便实现的调用WebService。serviceClass属性是接口类，address是webService的路径在其他bean里如果要调用webservice，
		只要将client这个bean注入到需要使用的bean里。 -->
<!-- 	<bean id="client" class="com.exp.service.outer.HelloWorld" factory-bean="clientFactory" factory-method="create" /> -->
<!-- 	<bean id="clientFactory" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean"> -->
<!-- 		<property name="serviceClass" value="com.exp.service.outer.HelloWorld" /> -->
<!-- 		<property name="address" value="http://localhost:8080/demo/webservice/HelloWorld" /> -->
<!-- 	</bean> -->

</beans>