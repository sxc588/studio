<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.support.dbaccess.mapper.MonScheduleJobMapper">
	<resultMap
		id="BaseResultMap"
		type="com.github.support.dbaccess.job.dto.MonScheduleJob">
		<id
			column="schedule_job_id"
			property="scheduleJobId"
			jdbcType="BIGINT" />
		<result
			column="job_name"
			property="jobName"
			jdbcType="VARCHAR" />
		<result
			column="alias_name"
			property="aliasName"
			jdbcType="VARCHAR" />
		<result
			column="job_group"
			property="jobGroup"
			jdbcType="VARCHAR" />
		<result
			column="job_trigger"
			property="jobTrigger"
			jdbcType="VARCHAR" />
		<result
			column="status"
			property="status"
			jdbcType="VARCHAR" />
		<result
			column="cron_expression"
			property="cronExpression"
			jdbcType="VARCHAR" />
		<result
			column="is_sync"
			property="isSync"
			jdbcType="VARCHAR" />
		<result
			column="url"
			property="url"
			jdbcType="VARCHAR" />
		<result
			column="description"
			property="description"
			jdbcType="VARCHAR" />
		<result
			column="gmt_create"
			property="gmtCreate"
			jdbcType="TIMESTAMP" />
		<result
			column="gmt_modify"
			property="gmtModify"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		schedule_job_id, job_name, alias_name, job_group, job_trigger, status,
		cron_expression,
		is_sync, url, description, gmt_create, gmt_modify
	</sql>
	<select
		id="selectByPrimaryKey"
		resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from mon_schedule_job
		where schedule_job_id = #{scheduleJobId,jdbcType=BIGINT}
	</select>
	<delete
		id="deleteByPrimaryKey"
		parameterType="java.lang.Long">
		delete from mon_schedule_job
		where schedule_job_id = #{scheduleJobId,jdbcType=BIGINT}
	</delete>
	<insert
		id="insert"
		parameterType="com.github.support.dbaccess.job.dto.MonScheduleJob">
		insert into mon_schedule_job (schedule_job_id, job_name, alias_name,
		job_group, job_trigger, status,
		cron_expression, is_sync, url,
		description, gmt_create, gmt_modify
		)
		values (#{scheduleJobId,jdbcType=BIGINT}, #{jobName,jdbcType=VARCHAR},
		#{aliasName,jdbcType=VARCHAR},
		#{jobGroup,jdbcType=VARCHAR}, #{jobTrigger,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
		#{cronExpression,jdbcType=VARCHAR}, #{isSync,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert
		id="insertSelective"
		parameterType="com.github.support.dbaccess.job.dto.MonScheduleJob">
		insert into mon_schedule_job
		<trim
			prefix="("
			suffix=")"
			suffixOverrides=",">
			<if test="scheduleJobId != null">
				schedule_job_id,
			</if>
			<if test="jobName != null">
				job_name,
			</if>
			<if test="aliasName != null">
				alias_name,
			</if>
			<if test="jobGroup != null">
				job_group,
			</if>
			<if test="jobTrigger != null">
				job_trigger,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="cronExpression != null">
				cron_expression,
			</if>
			<if test="isSync != null">
				is_sync,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="gmtCreate != null">
				gmt_create,
			</if>
			<if test="gmtModify != null">
				gmt_modify,
			</if>
		</trim>
		<trim
			prefix="values ("
			suffix=")"
			suffixOverrides=",">
			<if test="scheduleJobId != null">
				#{scheduleJobId,jdbcType=BIGINT},
			</if>
			<if test="jobName != null">
				#{jobName,jdbcType=VARCHAR},
			</if>
			<if test="aliasName != null">
				#{aliasName,jdbcType=VARCHAR},
			</if>
			<if test="jobGroup != null">
				#{jobGroup,jdbcType=VARCHAR},
			</if>
			<if test="jobTrigger != null">
				#{jobTrigger,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="cronExpression != null">
				#{cronExpression,jdbcType=VARCHAR},
			</if>
			<if test="isSync != null">
				#{isSync,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="gmtCreate != null">
				#{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModify != null">
				#{gmtModify,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update
		id="updateByPrimaryKeySelective"
		parameterType="com.github.support.dbaccess.job.dto.MonScheduleJob">
		update mon_schedule_job
		<set>
			<if test="jobName != null">
				job_name = #{jobName,jdbcType=VARCHAR},
			</if>
			<if test="aliasName != null">
				alias_name = #{aliasName,jdbcType=VARCHAR},
			</if>
			<if test="jobGroup != null">
				job_group = #{jobGroup,jdbcType=VARCHAR},
			</if>
			<if test="jobTrigger != null">
				job_trigger = #{jobTrigger,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="cronExpression != null">
				cron_expression = #{cronExpression,jdbcType=VARCHAR},
			</if>
			<if test="isSync != null">
				is_sync = #{isSync,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="gmtCreate != null">
				gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModify != null">
				gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
			</if>
		</set>
		where schedule_job_id = #{scheduleJobId,jdbcType=BIGINT}
	</update>
	<update
		id="updateByPrimaryKey"
		parameterType="com.github.support.dbaccess.job.dto.MonScheduleJob">
		update mon_schedule_job
		set job_name = #{jobName,jdbcType=VARCHAR},
		alias_name = #{aliasName,jdbcType=VARCHAR},
		job_group = #{jobGroup,jdbcType=VARCHAR},
		job_trigger = #{jobTrigger,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR},
		cron_expression = #{cronExpression,jdbcType=VARCHAR},
		is_sync = #{isSync,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
		gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
		where schedule_job_id = #{scheduleJobId,jdbcType=BIGINT}
	</update>
</mapper>