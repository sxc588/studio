<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.1.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
         http://www.springframework.org/schema/task
         http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.huawei.support.mybatis3.*" />


	<!-- jdbc.propertis Directory -->
	<bean
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations" value="classpath:jdbc.sqllite.properties" />
	</bean>

	<!-- <bean id="MyDataSource" destroy-method="close" -->
	<!-- class="org.apache.commons.dbcp.BasicDataSource"> -->
	<!-- <property name="driverClassName" value="${jdbc.driverClassName}" /> -->
	<!-- <property name="url" value="${jdbc.url}" /> -->
	<!-- <property name="username" value="${jdbc.username}" /> -->
	<!-- <property name="password" value="${jdbc.password}" /> -->
	<!-- </bean> -->

<!-- 	SqlSessionFactory -->
<!-- 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
<!-- 	<property name="dataSource" ref="dataSource" /> -->
<!-- 	</bean> -->

	<!-- ScanMapperFiles -->
<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
<!-- 	<property name="basePackage" value="com.huawei.support.mybatis3.mapper" /> -->
<!-- 	</bean> -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="100" />
		<property name="poolPreparedStatements" value="true" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
       <property name="dataSource" ref="dataSource" />  
<!--        <property name="mapperLocations"   -->
<!--               value="classpath:com/huawei/support/mybatis3/mappers/StudentMapper.xml" />   -->
<!--        <property name="typeAliasesPackage" value="com.huawei.support.mybatis3.model" />   -->
</bean>  

<!--     <bean id="studentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">   -->
<!--        <property name="mapperInterface"   -->
<!--            value="com.huawei.support.mybatis3.mapper.StudentMapper" />   -->
<!--        <property name="sqlSessionFactory" ref="sqlSessionFactory" />   -->
<!--     </bean>   -->

	<!-- ================================事务相关控制================================================= -->
	<!-- <bean name="transactionManager" -->
	<!-- class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
	<!-- <property name="dataSource" ref="MyDataSource"></property> -->
	<!-- </bean> -->

	<!-- <tx:advice id="userTxAdvice" transaction-manager="transactionManager"> -->
	<!-- <tx:attributes> -->
	<!-- <tx:method name="delete*" propagation="REQUIRED" read-only="false" -->
	<!-- rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException" 
		/> -->
	<!-- <tx:method name="insert*" propagation="REQUIRED" read-only="false" -->
	<!-- rollback-for="java.lang.RuntimeException" /> -->
	<!-- <tx:method name="update*" propagation="REQUIRED" read-only="false" -->
	<!-- rollback-for="java.lang.Exception" /> -->

	<!-- <tx:method name="find*" propagation="SUPPORTS" /> -->
	<!-- <tx:method name="get*" propagation="SUPPORTS" /> -->
	<!-- <tx:method name="select*" propagation="SUPPORTS" /> -->
	<!-- </tx:attributes> -->
	<!-- </tx:advice> -->

	<!-- <aop:config> -->
	<!-- <aop:pointcut id="pc" -->
	<!-- expression="execution(public * support.huawei.com.scm.service.*.*(..))" 
		/> 把事务控制在Service层 -->
	<!-- <aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" /> -->
	<!-- </aop:config> -->


	<!-- 以下为自定义Bean -->
	<!-- <bean id="empDao" class="support.huawei.com.scm.impl.EmpDaoImpl" -->
	<!-- autowire="byName" /> -->
	<!-- <bean id="empService" class="support.huawei.com.scm.impl.EmpServiceImpl" -->
	<!-- autowire="byName" /> -->
</beans>